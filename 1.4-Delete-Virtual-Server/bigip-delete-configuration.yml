---
- name: BIG-IP TEARDOWN
  hosts: lb
  connection: local
  gather_facts: false

  tasks:

    - name: Setup provider
      ansible.builtin.set_fact:
        provider:
          server: "{{ ansible_host }}"
          # user: "{{ f5_admin_user }}"
          # password: "{{ f5_admin_password }}"
          server_port: "{{ f5_admin_port }}"
          validate_certs: false

    - name: Find Active Machine
      f5networks.f5_modules.bigip_command:
        provider: "{{ provider }}"
        match: "any"
        warn: no
        commands:
          - bash -c "cat /var/prompt/ps1"
      register: result
  
    - debug:
        var: result.stdout

    - name: DELETE VIRTUAL SERVER
      f5networks.f5_modules.bigip_virtual_server:
        provider: "{{ provider }}"
        name: "{{ vip_name }}"
        state: absent
      when: '"Active" in result.stdout'

    - name: DELETE POOL
      f5networks.f5_modules.bigip_pool:
        provider: "{{ provider }}"
        name: "{{ vip_name }}_pool"
        state: absent
      when: '"Active" in result.stdout'

    - name: DELETE NODES
      f5networks.f5_modules.bigip_node:
        provider: "{{ provider }}"
        name: "{{ hostvars[item].inventory_hostname }}"
        state: absent
      loop: "{{ groups['web_servers'] }}"
      when: '"Active" in result.stdout'

    - name: DELETE iRules
      f5networks.f5_modules.bigip_irule:
        provider: "{{ provider }}"
        name: "{{ item }}"
        module: "ltm"
        state: absent
      with_items: "{{ irules }}"
      when: '"Active" in result.stdout'

    - name: Delete a client SSL profile
      f5networks.f5_modules.bigip_profile_client_ssl:
        provider: "{{ provider }}"
        state: absent
        name: "{{ vip_name }}_ClientSSL_profile"
      when: '"Active" in result.stdout'

    - name: Delete SSL Cert
      f5networks.f5_modules.bigip_ssl_certificate:
        provider: "{{ provider }}"
        name: "{{ ssl_cert[-4] }}_cert"
        state: absent
      when: '"Active" in result.stdout'

    - name: Delete SSL Key
      f5networks.f5_modules.bigip_ssl_key:
        provider: "{{ provider }}"
        name: "{{ ssl_key[-4] }}_key"
        state: absent
      when: '"Active" in result.stdout'

    - name: SAVE RUNNING CONFIG ON BIG-IP
      f5networks.f5_modules.bigip_config:
        provider: "{{ provider }}"
        save: true
      when: '"Active" in result.stdout'